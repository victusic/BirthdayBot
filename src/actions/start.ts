const { ContextMessageUpdate } = require("telegraf");
const db = require("../../configurate/db");

const { adminId } = require("../../configurate/telegram");

export const startPreview = async (ctx: typeof ContextMessageUpdate) => {
  const userId = ctx.from?.id;
  const username = ctx.from?.first_name;
  if (userId) {
    const findUser = await db.query(`SELECT id FROM "User" WHERE chatId = $1`, [
      userId,
    ]);
    if (findUser.rowCount === 0) {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      const req = await db.query(
        `INSERT INTO "User" (chatId, "name", mailingDateId, mailingConfigurationId, timeZoneId, mailingTime) VALUES ($1, $2, 1, 1, 1, '07:00') RETURNING *`,
        [userId, username],
      );
      await ctx.telegram.sendMessage(
        adminId,
        `–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${ctx.from?.first_name} ${ctx.from?.last_name} - ${ctx.from?.username}`,
      );
    }
    const keyboardButtons = [
      [{ text: "–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞", callback_data: "–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞" }],
      [{ text: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏" }],
    ];

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∏–∫–µ—Ä –≤–º–µ—Å—Ç–æ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ
    await ctx.replyWithSticker(
      "https://tlgrm.ru/_/stickers/2a9/a9c/2a9a9cf4-f16c-3250-b204-8a125cbe725a/1.webp",
      {
        reply_markup: {
          keyboard: keyboardButtons,
          resize_keyboard: true,
          one_time_keyboard: false,
        },
      },
    );

    await ctx.reply(
      `üëã–ü—Ä–∏–≤–µ—Ç, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å. –Ø —Ç–≤–æ–π –Ω–æ–≤—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Ç–µ–±—è —É–≤–µ–¥–æ–º–ª—è—Ç—å –æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞—Ö –∏ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã —Å–∞–º –¥–æ–±–∞–≤–∏—à—å!üéâ\n\n–¢–∞–∫ –∂–µ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, —á—Ç–æ, –∫–∞–∫ –∏ –∫–æ–≥–¥–∞ —Ç–µ–±–µ –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö‚öôÔ∏è\n\nüò∏–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞", —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å...üò∏`,
      {
        reply_markup: {
          inline_keyboard: keyboardButtons,
        },
      },
      {
        parse_mode: "Markdown",
      },
    );
  }
};
